name: Backend

on:
  push:
    branches: ["master"]
  pull_request:

env:
  NODE_VERSION: "20.x"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  format:
    name: Format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Format
        run: npm run format:ci

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - name: Docker Compose Up
        run: docker compose up -d ${{ matrix.service }} datalayer database

      - name: Test
        run: docker compose exec user npm run test:ci

  security:
    name: Security
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user, listing, review, message, lib]
    defaults:
      run:
        working-directory: apps/backend/${{ matrix.service }}
    steps:
      - uses: actions/checkout@v4

      - name: Nodejs Scan
        uses: ajinabraham/njsscan-action@master
        with:
          args: './apps/backend/${{ matrix.service }}'
